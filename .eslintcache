[{"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\index.js":"1","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\App.js":"2","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Header\\Header.js":"3","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\Pages\\Countries.js":"4","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\reportWebVitals.js":"5","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\services\\services.js":"6","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\Pages\\Infected.js":"7","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Tables\\CountryTable.js":"8","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Tables\\InfectedTable.js":"9","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\InfectedChart\\InfectedChart.js":"10","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Modal\\Modal.js":"11","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\BarChart\\BarChart.js":"12","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Counter\\Counter.js":"13"},{"size":501,"mtime":1606317094568,"results":"14","hashOfConfig":"15"},{"size":814,"mtime":1606704329367,"results":"16","hashOfConfig":"15"},{"size":580,"mtime":1606703631652,"results":"17","hashOfConfig":"15"},{"size":821,"mtime":1606698935126,"results":"18","hashOfConfig":"15"},{"size":362,"mtime":1606253418429,"results":"19","hashOfConfig":"15"},{"size":1261,"mtime":1606700405905,"results":"20","hashOfConfig":"15"},{"size":2796,"mtime":1606703471678,"results":"21","hashOfConfig":"15"},{"size":805,"mtime":1606597882449,"results":"22","hashOfConfig":"15"},{"size":1352,"mtime":1606690437759,"results":"23","hashOfConfig":"15"},{"size":2196,"mtime":1606736534592,"results":"24","hashOfConfig":"15"},{"size":3627,"mtime":1606738787707,"results":"25","hashOfConfig":"15"},{"size":1652,"mtime":1606698771228,"results":"26","hashOfConfig":"15"},{"size":253,"mtime":1606703733203,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1w69hmh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\index.js",[],["57","58"],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\App.js",["59"],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Header\\Header.js",[],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\Pages\\Countries.js",[],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\reportWebVitals.js",[],["60","61"],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\services\\services.js",[],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\Pages\\Infected.js",["62","63"],"import React, {useEffect, useState} from 'react';\r\nimport InfectedTable from '../components/Tables/InfectedTable';\r\nimport InfectedChart from '../components/InfectedChart/InfectedChart';\r\nimport {getInfected,sortByAge} from '../services/services';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport Modal from '../components/Modal/Modal';\r\nimport './pages.scss';\r\n\r\n\r\nconst Infected = ({infected, setInfected}) =>{\r\n    const [order, setOrder] = useState(false);\r\n    const [displayNewInfectedModal, setDisplayNewInfectedModal] = useState(false);\r\n\r\n    const addInfected = () =>{\r\n        setDisplayNewInfectedModal(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const promise = getInfected();\r\n        promise.then(data => { \r\n            setInfected(data);\r\n        });\r\n    }, []);\r\n\r\n    const changeOrder = async() =>{\r\n        setOrder(!order);\r\n        if(order === false){\r\n            const promise = getInfected();\r\n            promise.then(data => { \r\n                setInfected(data);\r\n            });\r\n        }else{\r\n            sortByAge(infected);\r\n        }\r\n        \r\n    }\r\n\r\n    const sortByAge = (data) =>{\r\n        const orderedData = [...data].sort((a,b)=>{\r\n            return Number(a.age) - Number(b.age);\r\n        })\r\n        setInfected(orderedData);\r\n        return orderedData;\r\n    }\r\n\r\n    return(\r\n        <section className=\"page\">\r\n            <header className=\"page-header\">\r\n                <h3>INFECTED LIST</h3>\r\n            </header>\r\n            {\r\n                displayNewInfectedModal ?\r\n                <Modal \r\n                    tittle = {'Add new Infected'} \r\n                    close = {() => setDisplayNewInfectedModal(false)} \r\n                    infected = {infected}\r\n                    setInfected = {setInfected}\r\n                />\r\n                :\r\n                null  \r\n            } \r\n            <main className=\"page-content\">\r\n                <div className='button-container'>\r\n                    <button onClick={changeOrder}>Order by age</button>\r\n                    <button onClick={addInfected}>Add an infected</button>\r\n                    <ReactHTMLTableToExcel \r\n                        id='export-excel'\r\n                        className='btn-export'\r\n                        table='infected-table'\r\n                        filename='infectedtable'\r\n                        sheet='hoja 1'\r\n                        buttonText='Export to Excel'\r\n                    />\r\n                </div>\r\n                \r\n                <div className='table-chart-container'>\r\n                    <InfectedChart infected={infected}/>\r\n                    <InfectedTable infected={infected}/>\r\n                </div>\r\n            </main>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Infected;\r\n","C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Tables\\CountryTable.js",[],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Tables\\InfectedTable.js",[],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\InfectedChart\\InfectedChart.js",["64","65"],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Modal\\Modal.js",["66","67","68","69"],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\BarChart\\BarChart.js",[],"C:\\Users\\agusr\\OneDrive\\Documentos\\CHALLENGES\\blockinar-challenge\\src\\components\\Counter\\Counter.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":15,"nodeType":"76","messageId":"77","endLine":1,"endColumn":24},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},{"ruleId":"74","severity":1,"message":"80","line":4,"column":21,"nodeType":"76","messageId":"77","endLine":4,"endColumn":30},{"ruleId":"81","severity":1,"message":"82","line":23,"column":8,"nodeType":"83","endLine":23,"endColumn":10,"suggestions":"84"},{"ruleId":"74","severity":1,"message":"85","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"86","line":8,"column":11,"nodeType":"76","messageId":"77","endLine":8,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":27,"column":35,"nodeType":"89","messageId":"90","endLine":27,"endColumn":37},{"ruleId":"87","severity":1,"message":"88","line":27,"column":67,"nodeType":"89","messageId":"90","endLine":27,"endColumn":69},{"ruleId":"87","severity":1,"message":"88","line":41,"column":56,"nodeType":"89","messageId":"90","endLine":41,"endColumn":58},{"ruleId":"87","severity":1,"message":"88","line":43,"column":56,"nodeType":"89","messageId":"90","endLine":43,"endColumn":58},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["91"],["92"],"'sortByAge' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setInfected'. Either include it or remove the dependency array. If 'setInfected' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["93"],"'useState' is defined but never used.","'infectedByDate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [setInfected]",{"range":"96","text":"97"},[803,805],"[setInfected]"]